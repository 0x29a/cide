# #############################################
# ################ WARNING ####################
# This file is generated automatically. #######
# Run `make local_zsh` to re-generate it. #####
# #############################################
# #############################################
#
#         __.,,------.._
#      ,'"   _      _   "`.
#     /.__, ._  -=- _"`    Y
#    (.____.-.`      ""`   j
#     VvvvvvV`.Y,.    _.,-'       ,     ,     ,
#        Y    ||,   '"\         ,/    ,/    ./
#        |   ,'  ,     `-..,'_,'/___,'/   ,'/   ,
#   ..  ,;,,',-'"\,'  ,  .     '     ' ""' '--,/    .. ..
# ,'. `.`---'     `, /  , Y -=-    ,'   ,   ,. .`-..||_|| ..
#ff\\`. `._        /f ,'j j , ,' ,   , f ,  \=\ Y   || ||`||_..
#l` \` `.`."`-..,-' j  /./ /, , / , / /l \   \=\l   || `' || ||...
# `  `   `-._ `-.,-/ ,' /`"/-/-/-/-"'''"`.`.  `'.\--`'--..`'_`' || ,
#            "`-_,',  ,'  f    ,   /      `._    ``._     ,  `-.`'//         ,
#          ,-"'' _.,-'    l_,-'_,,'          "`-._ . "`. /|     `.'\ ,       |
#        ,',.,-'"          \=) ,`-.         ,    `-'._`.V |       \ // .. . /j
#        |f\\               `._ )-."`.     /|         `.| |        `.`-||-\\/
#        l` \`                 "`._   "`--' j          j' j          `-`---'
#         `  `                     "`,-  ,'/       ,-'"  /
#                                 ,'",__,-'       /,, ,-'
#                                 Vvv'            VVv'

# Unlimited history
HISTFILE="$HOME/.zsh_history"
HISTSIZE=10000000
SAVEHIST=10000000
setopt BANG_HIST                 # Treat the '!' character specially during expansion.
setopt EXTENDED_HISTORY          # Write the history file in the ":start:elapsed;command" format.
setopt INC_APPEND_HISTORY        # Write to the history file immediately, not when the shell exits.
setopt SHARE_HISTORY             # Share history between all sessions.
setopt HIST_EXPIRE_DUPS_FIRST    # Expire duplicate entries first when trimming history.
setopt HIST_IGNORE_DUPS          # Don't record an entry that was just recorded again.
setopt HIST_IGNORE_ALL_DUPS      # Delete old recorded entry if new entry is a duplicate.
setopt HIST_FIND_NO_DUPS         # Do not display a line previously found.
setopt HIST_IGNORE_SPACE         # Don't record an entry starting with a space.
setopt HIST_SAVE_NO_DUPS         # Don't write duplicate entries in the history file.
setopt HIST_REDUCE_BLANKS        # Remove superfluous blanks before recording entry.
setopt HIST_VERIFY               # Don't execute immediately upon history expansion.
setopt HIST_BEEP                 # Beep when accessing nonexistent history.

# #############################################
# powerlevel10k pre-initialization ############
# https://github.com/romkatv/powerlevel10k ####

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# #############################################
# Default .zshrc comments and config ##########

# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

export CIDE_ENVIRONMENT="{{ cide_environment }}"

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Upgrade zsh without asking
DISABLE_UPDATE_PROMPT=true
export UPDATE_ZSH_DAYS=3

ZSH_THEME="powerlevel10k/powerlevel10k"

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS=true

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

plugins=(
  git
)

source $ZSH/oh-my-zsh.sh

# #############################################
# User configuration ##########################


# #############################################
# Misc ########################################

# default editor
export EDITOR=/usr/bin/nvim

# setting for pip install --user
export PATH="$HOME/.local/bin:$PATH"

# Deno
export DENO_INSTALL="/$HOME/.deno"
export PATH="$DENO_INSTALL/bin:$PATH"

# Ruby gems, needed for Jekyll
export GEM_HOME="$HOME/gems"
export PATH="$HOME/gems/bin:$PATH"

# #############################################
# Aliases #####################################

alias vim="nvim"
alias v="vim"
alias nano="vim"
alias pbcopy="xclip -selection clipboard"
alias pbpaste="xclip -selection clipboard -o"
alias se="sudo -e"

alias d=docker
alias dps="docker ps"
alias dck=docker-compose
alias docker_clean_dangling_images="docker rmi \$(docker images -a --filter=dangling=true -q)"
alias docker_clean_stopped_containers="docker rm \$(docker ps --filter=status=exited --filter=status=created -q)"

alias e="exa --long --all"
alias b=bat
alias p="ipython"
alias upd="sudo apt update && sudo apt list --upgradable && sudo apt upgrade -y"

alias soft="cd ~/Soft"
alias proj="cd ~/Projects"
alias cide="cd ~/Projects/cide"
alias s=sudo

if [ "$CIDE_ENVIRONMENT" = "localhost" ]; then
  alias c="code ."
  alias j="jira"
  alias dem="ssh demid@cloud"
  alias db="code ~/Cloud/PersonalDatabase"
  alias fo="firefox --new-tab $(pbpaste)"
  alias jo="j o"
  alias sp="j sp"
  alias uq="ssh demid@cloud -t 'cd ~/Projects/uq/uq-learnx-configuration-secure && ssh -F ssh-config uq-director-stage -t \"cd uq-learnx-configuration-secure/ && ssh ubuntu@172.31.30.80 -i ssh_keys/oc-edxapp-stage.pem\"'"
  alias cloud_tunnel="autossh -N \
  -L 1976:127.0.0.1:1976 \
  -L 18734:127.0.0.1:18734 \
  -L 18010:127.0.0.1:18010 \
  -L 19877:127.0.0.1:19877 \
  -L 18735:127.0.0.1:18735 \
  -L 18130:127.0.0.1:18130 \
  -L 18400:127.0.0.1:18400 \
  -L 1994:127.0.0.1:1994 \
  -L 18150:127.0.0.1:18150 \
  -L 18160:127.0.0.1:18160 \
  -L 18000:127.0.0.1:18000 \
  -L 18100:127.0.0.1:18100 \
  -L 19876:127.0.0.1:19876 \
  -L 18120:127.0.0.1:18120 \
  -L 18381:127.0.0.1:18381 \
  -L 44567:127.0.0.1:44567 \
  -L 3141:127.0.0.1:3141 \
  -L 15900:127.0.0.1:15900 \
  -L 25900:127.0.0.1:25900 \
  -L 3506:127.0.0.1:3506 \
  -L 2001:127.0.0.1:2001 \
  -L 5000:127.0.0.1:5000 \
  -L 3000:127.0.0.1:3000 \
  -L 3001:127.0.0.1:3001 \
  -L 3002:127.0.0.1:3002 \
  -L 3003:127.0.0.1:3003 \
  -L 8888:127.0.0.1:8888 \
  -L 5432:127.0.0.1:5432 \
  -L 2000:127.0.0.1:2000 \
  -L 2222:127.0.0.1:2222 \
  -L 2002:127.0.0.1:2002 \
  -L 8000:127.0.0.1:8000 \
  -L 8080:127.0.0.1:8080 \
  -L 3306:127.0.0.1:3306 \
  -L 8001:127.0.0.1:8001 \
  -L 8002:127.0.0.1:8002 \
  -L 8003:127.0.0.1:8003 \
  -L 8031:127.0.0.1:8031 \
  -L 8120:127.0.0.1:8120 \
  -L 8137:127.0.0.1:8137 \
  -L 9200:127.0.0.1:9200 \
  -L 18080:127.0.0.1:18080 \
  -L 8100:127.0.0.1:8100 \
  -L 8110:127.0.0.1:8110 \
  -L 9876:127.0.0.1:9876 \
  -L 50070:127.0.0.1:50070 \
  -L 8088:127.0.0.1:8088 \
  -L 22000:127.0.0.1:22000 \
  -L 27017:127.0.0.1:27017 \
  -L 11211:127.0.0.1:11211 \
  -L 4444:127.0.0.1:4444 \
  -L 5900:127.0.0.1:5900 \
  -L 4567:127.0.0.1:4567 \
  -L 27017:127.0.0.1:27017 \
  -L 9090:127.0.0.1:9090 \
  -L 9000:127.0.0.1:9000 \
  -L 9999:127.0.0.1:9999 \
  -L 8123:127.0.0.1:8123 \
  -L 8124:127.0.0.1:8124 \
  -L 8125:127.0.0.1:8125 \
  -L 8111:127.0.0.1:8111 \
  -L 4000:127.0.0.1:4000 \
  -L 2101:127.0.0.1:2101 \
  -L 8875:127.0.0.1:8875 \
  -L 6666:127.0.0.1:6666 \
  -L 8381:127.0.0.1:8381 \
  -L 9099:127.0.0.1:9099 \
  -L 9098:127.0.0.1:9098 \
  -L 1333:127.0.0.1:1333 \
  -L 1999:127.0.0.1:1999 \
  demid@cloud"

  alias log_time="(cd $HOME/Soft/toggl-tempo-worklog-transfer && $HOME/Soft/toggl-tempo-worklog-transfer/.fenv/bin/python $HOME/Soft/toggl-tempo-worklog-transfer/sync_timelogs.py)"
  alias obs_audio_record="obs --collection opencraft_collection --scene audio_record --profile audio_record"
  alias obs_end_of_sprint="obs --collection opencraft_collection --scene end_of_sprint --profile end_of_sprint"

  # browser shortcuts
  alias estimation_session="firefox --new-tab \"https://tasks.opencraft.com/projects/BB?selectedItem=com.spartez.jira.plugins.jiraplanningpoker:pokerng-project-side-panel-link&rapidView=26&source=internal\""
elif [ "$CIDE_ENVIRONMENT" = "cloud" ]; then
  alias dev="cd ~/Projects/bebop-devstack/devstack"
  alias pre="prettier --single-quote --write"
  alias sol="cd ~/Projects/solutions-devstack/ && vagrant ssh -- -t 'cd devstack/devstack/; /bin/bash'"
  alias jol="cd ~/Projects/solutions-juniper-devstack/ && vagrant ssh -- -t 'cd devstack/devstack/; /bin/bash'"
  alias uq="cd ~/Projects/uq/uq-learnx-configuration-secure && ssh -F ssh-config uq-director-stage -t \"cd uq-learnx-configuration-secure/ && ssh ubuntu@172.31.30.80 -i ssh_keys/oc-edxapp-stage.pem\""
  alias tunnel="cloudflared tunnel run openedx"

  # tutor shortcuts
  alias t="tutor"
  alias t_root="cd \$(t config printroot)"
  alias nt="TUTOR_APP=nightly_tutor TUTOR_ROOT=${HOME}/Projects/tutor_dirs/nightly/root ${HOME}/Projects/tutor_dirs/nightly/.fenv/bin/tutor"
  alias nt_root="cd \$(nt config printroot)"
  alias lt="TUTOR_APP=lilac_tutor TUTOR_ROOT=${HOME}/Projects/tutor_dirs/lilac/root ${HOME}/Projects/tutor_dirs/lilac/.fenv/bin/tutor"
  alias lt_root="cd \$(lt config printroot)"
  alias mt="TUTOR_APP=maple_tutor TUTOR_ROOT=${HOME}/Projects/tutor_dirs/maple/root ${HOME}/Projects/tutor_dirs/maple/.fenv/bin/tutor"
  alias mt_root="cd \$(mt config printroot)"
  alias ct="TUTOR_APP=ct_nightly_tutor TUTOR_ROOT=${HOME}/Projects/tutor_dirs/ct_nightly/root ${HOME}/Projects/tutor_dirs/ct_nightly/.fenv/bin/tutor"
  alias ct_root="cd \$(ct config printroot)"
  alias pt="TUTOR_APP=prod_nightly_tutor TUTOR_ROOT=${HOME}/Projects/tutor_dirs/prod_nightly/root ${HOME}/Projects/tutor_dirs/prod_nightly/.fenv/bin/tutor"
  alias pt_root="cd \$(pt config printroot)"
  alias ntt="TUTOR_APP=nutmeg_tutor TUTOR_ROOT=${HOME}/Projects/tutor_dirs/nutmeg/root ${HOME}/Projects/tutor_dirs/nutmeg/.fenv/bin/tutor"
  alias ntt_root="cd \$(ntt config printroot)"
 else
    echo "You have to set CIDE_ENVIRONMENT"
fi

# #############################################
# Helpers #####################################

random_password_special() {
  tr -dc 'A-Za-z0-9!"#$%&'\''()*+,-./:;<=>?@[\]^_`{|}~' </dev/urandom | head -c $1  ; echo
}

random_password() {
  tr -dc A-Za-z0-9 </dev/urandom | head -c $1 ; echo ''
}

fenv() {
  if [ -d ".fenv" ]
  then
    source .fenv/bin/activate
  else
    virtualenv -p python3 .fenv
    source .fenv/bin/activate
  fi
}

if [ "$CIDE_ENVIRONMENT" = "localhost" ]; then
  cp_to_cloud() {
    scp -r $1 demid@cloud:$2
  }

  cp_from_cloud() {
    scp -r demid@cloud:$1 $2
  }

  ffmpeg_speedup() {
    ffmpeg -i $1 -filter_complex "[0:v]setpts=0.6666666666666666*PTS[v];[0:a]atempo=1.5[a]" -map "[v]" -map "[a]" $2
  }

  # #############################################
  # Cloud tunnel launching  #####################

  if [ "$CIDE_ENVIRONMENT" = "localhost" ]; then
    if ! tmux ls | grep -q "cloud_tunnel"; then
      tmux new-session -d -s cloud_tunnel
      tmux send -t cloud_tunnel "sleep 10 && cloud_tunnel" ENTER
    fi
    alias tunnel_session="tmux attach -t cloud_tunnel"
  fi

elif [ "$CIDE_ENVIRONMENT" = "cloud" ]; then
  # #############################################
  # pyenv setup #################################

  export PYENV_ROOT="$HOME/.pyenv"
  export PATH="$PYENV_ROOT/bin:$PATH"

  eval "$(pyenv init --path)"
  eval "$(pyenv init -)"
  eval "$(pyenv virtualenv-init -)"

  # #############################################
  # nvm setup #################################

  export NVM_DIR="$HOME/.nvm"
  [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
  [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

  # Kubernetes setup
  source <(kubectl completion zsh)
  alias k=kubectl
  complete -F __start_kubectl k

  # #############################################
  # https://github.com/go-jira/jira config  #####

  export PATH=$PATH:/usr/local/go/bin
  eval "$(jira --completion-script-bash)"

fi

. ${HOME}/Soft/z_jump_around/z.sh

# #############################################
# powerlevel10k initialization ################
# https://github.com/romkatv/powerlevel10k ####

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
